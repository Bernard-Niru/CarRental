@* @model IEnumerable<CarRental.DTOs.UserDTO>
@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<h2>User List</h2>
<a asp-action="AddUser" class="btn btn-primary mb-3">Add New User</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Username</th>
            <th>Role</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.Name</td>
                <td>@user.Email</td>
                <td>@user.UserName</td>
                <td>@user.Role</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-warning">
                        <i class="bi bi-pencil-fill"></i>
                    </a>
                    <form asp-action="Delete" asp-controller="Admin" method="post"
                          onsubmit="return confirm('Are you sure you want to delete this user?');"
                          style="display:inline;">
                        <input type="hidden" name="id" value="@user.Id" />
                        <button type="submit" class="btn btn-sm btn-danger">
                            <i class="bi bi-trash"></i> 
                        </button>
                    </form>

                </td>
            </tr>
        }
    </tbody>
</table> *@

 @model IEnumerable<CarRental.DTOs.UserDTO>
@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">User List</h2>
    <a asp-action="AddUser" class=" btn btn-primary">
            <i class="bi bi-plus-lg me-1"></i> Add New User
        </a>
    </div>
        <div class="table-responsive rounded-3 overflow-hidden shadow-sm">
        <table class="table table-hover table-striped align-middle">
    
        <thead class="table-dark">
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Email</th>
                <th scope="col">Username</th>
                <th scope="col">Role</th>
                <th scope="col" style="width: 130px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="5" class="text-center text-muted">No users found.</td>
                </tr>
            }
            else
            {
                @foreach (var user in Model)
                {
                    <tr>
                        <td>@user.Name</td>
                        <td>@user.Email</td>
                        <td>@user.UserName</td>
                        <td>
                            <span class="badge@*  @GetRoleBadgeClass(@* user.Id *@)">
                                @user.Role
                            </span>
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-outline-warning me-1" title="Edit User">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <form asp-action="Delete" asp-controller="Admin" method="post" class="d-inline"
                                  onsubmit="return confirm('Are you sure you want to delete this user?');">
                                <input type="hidden" name="id" value="@user.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete User">
                                <i class="bi bi-trash3"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>
@functions {
    private string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "User" => "bg-primary",
            "Manager" => "bg-success",
            _ => "bg-secondary",
        };
    }
}




@* @model IEnumerable<CarRental.DTOs.UserDTO>
@{
    ViewData["Title"] = "User List";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="bi bi-check-circle me-2"></i> @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Container Box with Shadow and Padding -->
<div class="p-4 bg-white rounded shadow-sm">

    <!-- Centered Heading -->
    <h2 class="text-center mb-4">User List</h2>

    <!-- Add User Button aligned center under heading -->
    <div class="text-center mb-4">
        <a asp-action="AddUser" class="btn btn-primary px-4">
            <i class="bi bi-plus-lg me-1"></i> Add New User
        </a>
    </div>

    <table class="table table-bordered align-middle mb-0" style="border-color: #0d6efd;">
        <thead>
            <tr class="table-primary text-center" style="background-color: #cfe2ff; border-color: #0d6efd;">
                <th scope="col" style="border-color: #0d6efd;">Name</th>
                <th scope="col" style="border-color: #0d6efd;">Email</th>
                <th scope="col" style="border-color: #0d6efd;">Username</th>
                <th scope="col" style="border-color: #0d6efd;">Role</th>
                <th scope="col" style="width: 130px; border-color: #0d6efd;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (!Model.Any())
            {
                <tr>
                    <td colspan="5" class="text-center text-muted py-4">No users found.</td>
                </tr>
            }
            else
            {
                @foreach (var user in Model)
                {
                    <tr style="border-color: #0d6efd;">
                        <td style="border-color: #0d6efd;">@user.Name</td>
                        <td style="border-color: #0d6efd;">@user.Email</td>
                        <td style="border-color: #0d6efd;">@user.UserName</td>
                        <td style="border-color: #0d6efd; text-align:center;">
                            <span class="badge GetRoleBadgeClass(user.Role)">
                                @user.Role
                            </span>
                        </td>
                        <td style="border-color: #0d6efd; text-align:center;">
                            <a asp-action="Edit" asp-route-id="@user.Id" class="btn btn-sm btn-outline-warning me-1" title="Edit User">
                                <i class="bi bi-pencil-fill"></i>
                            </a>
                            <form asp-action="Delete" asp-controller="Admin" method="post" class="d-inline"
                                  onsubmit="return confirm('Are you sure you want to delete this user?');">
                                <input type="hidden" name="id" value="@user.Id" />
                                <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete User">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@functions {
    private string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "User" => "bg-primary",
            "Manager" => "bg-success",
            _ => "bg-secondary",
        };
    }
}
 *@