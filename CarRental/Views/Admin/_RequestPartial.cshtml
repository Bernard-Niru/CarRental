@model CarRental.ViewModels.RequestViewModel

@{
    ViewData["Title"] = "_RequestPartial";

}
<link href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css" rel="stylesheet" />

<div class="modal fade" id="addCarModal" tabindex="-1" aria-labelledby="addCarModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-4 shadow-lg border-0">
            <div class="modal-body p-5 bg-white">
                <h3 class="text-center mb-4">Request Car</h3>

                <form asp-action="AddRequest" asp-controller="Admin" method="post">
                    <input type="hidden" name="CarID" id="CarID" />


                    <div class="mb-3">
                        <label for="BrandName" class="form-label">Brand</label>
                        <input type="text" name="BrandName" id="BrandName" class="form-control" readonly />
                    </div>

                    <div class="mb-3">
                        <label for="CarName" class="form-label">Car Name</label>
                        <input type="text" name="CarName" id="CarName" class="form-control" readonly />
                    </div>

                    <div class="mb-3">
                        <label for="RentalRate" class="form-label">Rental Rate</label>
                        <input type="number" name="RentalRate" id="RentalRate" class="form-control" readonly />
                    </div>

                    <!-- 🚗 Pickup Date -->
                    <div class="mb-3">
                        <label for="PickupDate" class="form-label">Pickup Date</label>


                        @* <input type="date" name="PickupDate" id="PickupDate" class="form-control" required /> *@
                        <input type="date" name="PickupDate" class="form-control date-input" id="PickupDate" required>

                    </div>

                    <!-- 🕒 Pickup Time -->
                    <div class="mb-3">
                        <label for="PickupTime" class="form-label">Pickup Time</label>
                        <input type="time" name="PickupTime" id="PickupTime" class="form-control" required />
                    </div>

                    <!-- 🚗 Return Date -->
                    <div class="mb-3">
                        <label for="ReturnDate" class="form-label">Return Date</label>


                        @*  <input type="date" name="ReturnDate" id="ReturnDate" class="form-control" required /> *@
                        <input type="date" name="ReturnDate" class="form-control date-input" id="ReturnDate" required />

                    </div>

                    <!-- 🕒 Return Time -->
                    <div class="mb-3">
                        <label for="ReturnTime" class="form-label">Return Time</label>


                        <input type="time" name="ReturnTime" id="ReturnTime" class="form-control" required />

                    </div>

                    <!-- Add more fields as needed (e.g. rental date, user name, etc.) -->

                    <button type="submit" class="btn btn-success w-100 mt-3">Submit Request</button>
                </form>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const pickupInput = document.getElementById("PickupDate");
        const returnInput = document.getElementById("ReturnDate");

        // Initialize Pickup Date Picker — disallow past dates
        const pickupPicker = flatpickr(pickupInput, {
            dateFormat: "Y-m-d",
            minDate: "today",
            onChange: function (selectedDates, dateStr, instance) {
                // When a pickup date is selected, update the return date picker
                if (selectedDates.length > 0) {
                    const selectedPickupDate = selectedDates[0];

                    returnPicker.set('minDate', selectedPickupDate.fp_incr(1)); // Return must be at least 1 day after pickup
                }
            }
        });

        // Initialize Return Date Picker — default minDate is today
        const returnPicker = flatpickr(returnInput, {
            dateFormat: "Y-m-d",
            minDate: "today"
        });

        // Form validation: pickup must be before return
        const form = document.querySelector("form");

        form.addEventListener("submit", function (e) {
            const pickup = new Date(pickupInput.value);
            const ret = new Date(returnInput.value);

            if (!pickupInput.value || !returnInput.value) {
                alert("Please select both pickup and return dates.");
                e.preventDefault();
                return;
            }

            if (pickup >= ret) {
                e.preventDefault();
                alert("Return date must be after pickup date.");
                returnInput.focus();
            }
        });
    });
</script>


<script src="~/js/customer.js"></script>